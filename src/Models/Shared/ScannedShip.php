<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace emdash\SpaceTraders\Models\Shared;


/**
 * ScannedShip - The ship that was scanned. Details include information about the ship that could be detected by the scanner.
 * 
 * @package emdash\SpaceTraders\Models\Shared
 * @access public
 */
class ScannedShip
{
    /**
     * The engine of the ship.
     * 
     * @var \emdash\SpaceTraders\Models\Shared\ScannedShipEngine $engine
     */
	#[\JMS\Serializer\Annotation\SerializedName('engine')]
    #[\JMS\Serializer\Annotation\Type('emdash\SpaceTraders\Models\Shared\ScannedShipEngine')]
    public ScannedShipEngine $engine;
    
    /**
     * The frame of the ship.
     * 
     * @var ?\emdash\SpaceTraders\Models\Shared\ScannedShipFrame $frame
     */
	#[\JMS\Serializer\Annotation\SerializedName('frame')]
    #[\JMS\Serializer\Annotation\Type('emdash\SpaceTraders\Models\Shared\ScannedShipFrame')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScannedShipFrame $frame = null;
    
    /**
     * $mounts
     * 
     * @var ?array<\emdash\SpaceTraders\Models\Shared\ScannedShipMounts> $mounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('mounts')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\ScannedShipMounts>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mounts = null;
    
    /**
     * The navigation information of the ship.
     * 
     * @var \emdash\SpaceTraders\Models\Shared\ShipNav $nav
     */
	#[\JMS\Serializer\Annotation\SerializedName('nav')]
    #[\JMS\Serializer\Annotation\Type('emdash\SpaceTraders\Models\Shared\ShipNav')]
    public ShipNav $nav;
    
    /**
     * The reactor of the ship.
     * 
     * @var ?\emdash\SpaceTraders\Models\Shared\ScannedShipReactor $reactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('reactor')]
    #[\JMS\Serializer\Annotation\Type('emdash\SpaceTraders\Models\Shared\ScannedShipReactor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScannedShipReactor $reactor = null;
    
    /**
     * The public registration information of the ship
     * 
     * @var \emdash\SpaceTraders\Models\Shared\ShipRegistration $registration
     */
	#[\JMS\Serializer\Annotation\SerializedName('registration')]
    #[\JMS\Serializer\Annotation\Type('emdash\SpaceTraders\Models\Shared\ShipRegistration')]
    public ShipRegistration $registration;
    
    /**
     * The globally unique identifier of the ship.
     * 
     * @var string $symbol
     */
	#[\JMS\Serializer\Annotation\SerializedName('symbol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $symbol;
    
	public function __construct()
	{
		$this->engine = new \emdash\SpaceTraders\Models\Shared\ScannedShipEngine();
		$this->frame = null;
		$this->mounts = null;
		$this->nav = new \emdash\SpaceTraders\Models\Shared\ShipNav();
		$this->reactor = null;
		$this->registration = new \emdash\SpaceTraders\Models\Shared\ShipRegistration();
		$this->symbol = "";
	}
}
