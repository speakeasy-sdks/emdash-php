<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace emdash\SpaceTraders\Models\Shared;


class Market
{
    /**
     * The list of goods that are bought and sold between agents at this market.
     * 
     * @var array<\emdash\SpaceTraders\Models\Shared\TradeGood> $exchange
     */
	#[\JMS\Serializer\Annotation\SerializedName('exchange')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\TradeGood>')]
    public array $exchange;
    
    /**
     * The list of goods that are exported from this market.
     * 
     * @var array<\emdash\SpaceTraders\Models\Shared\TradeGood> $exports
     */
	#[\JMS\Serializer\Annotation\SerializedName('exports')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\TradeGood>')]
    public array $exports;
    
    /**
     * The list of goods that are sought as imports in this market.
     * 
     * @var array<\emdash\SpaceTraders\Models\Shared\TradeGood> $imports
     */
	#[\JMS\Serializer\Annotation\SerializedName('imports')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\TradeGood>')]
    public array $imports;
    
    /**
     * The symbol of the market. The symbol is the same as the waypoint where the market is located.
     * 
     * @var string $symbol
     */
	#[\JMS\Serializer\Annotation\SerializedName('symbol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $symbol;
    
    /**
     * The list of goods that are traded at this market. Visible only when a ship is present at the market.
     * 
     * @var ?array<\emdash\SpaceTraders\Models\Shared\MarketTradeGood> $tradeGoods
     */
	#[\JMS\Serializer\Annotation\SerializedName('tradeGoods')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\MarketTradeGood>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tradeGoods = null;
    
    /**
     * The list of recent transactions at this market. Visible only when a ship is present at the market.
     * 
     * @var ?array<\emdash\SpaceTraders\Models\Shared\MarketTransaction> $transactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactions')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\MarketTransaction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $transactions = null;
    
	public function __construct()
	{
		$this->exchange = [];
		$this->exports = [];
		$this->imports = [];
		$this->symbol = "";
		$this->tradeGoods = null;
		$this->transactions = null;
	}
}
