<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace emdash\SpaceTraders\Models\Shared;


class Faction
{
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
	#[\JMS\Serializer\Annotation\SerializedName('headquarters')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $headquarters;
    
    /**
     * Whether or not the faction is currently recruiting new agents.
     * 
     * @var bool $isRecruiting
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRecruiting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRecruiting;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('symbol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $symbol;
    
    /**
     * $traits
     * 
     * @var array<\emdash\SpaceTraders\Models\Shared\FactionTrait> $traits
     */
	#[\JMS\Serializer\Annotation\SerializedName('traits')]
    #[\JMS\Serializer\Annotation\Type('array<emdash\SpaceTraders\Models\Shared\FactionTrait>')]
    public array $traits;
    
	public function __construct()
	{
		$this->description = "";
		$this->headquarters = "";
		$this->isRecruiting = false;
		$this->name = "";
		$this->symbol = "";
		$this->traits = [];
	}
}
